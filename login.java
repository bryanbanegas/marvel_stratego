
package Banegas_Bryan_Prueba_1;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import static Banegas_Bryan_Prueba_1.crear_cuenta.listaUsuarios;

public class login extends javax.swing.JFrame {
    
    private String contra;
    private String usuario;

    /**
     * Creates new form login
     */
    public login() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }
    public static String usuarioLogin="";
    public static int posicion=0;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PasswordTextbox = new javax.swing.JPasswordField();
        UsuarioTextbox = new javax.swing.JTextField();
        IngresarButton = new javax.swing.JButton();
        CancelarButton = new javax.swing.JButton();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PasswordTextbox.setBackground(new java.awt.Color(255, 255, 255));
        PasswordTextbox.setForeground(new java.awt.Color(0, 0, 0));
        PasswordTextbox.setBorder(null);
        PasswordTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordTextboxActionPerformed(evt);
            }
        });
        getContentPane().add(PasswordTextbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 200, 20));

        UsuarioTextbox.setBackground(new java.awt.Color(255, 255, 255));
        UsuarioTextbox.setForeground(new java.awt.Color(0, 0, 0));
        UsuarioTextbox.setBorder(null);
        UsuarioTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuarioTextboxActionPerformed(evt);
            }
        });
        getContentPane().add(UsuarioTextbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 200, 20));

        IngresarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Ingresar.jpg"))); // NOI18N
        IngresarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IngresarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(IngresarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 160, 40));

        CancelarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Cancelar.jpg"))); // NOI18N
        CancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(CancelarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 160, 40));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BackgroundCuenta.png"))); // NOI18N
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -8, 610, 420));

        setSize(new java.awt.Dimension(622, 414));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        panel_control pasar=new panel_control();
        pasar.setVisible(true);
        this.dispose();
    } 
    private void IngresarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IngresarButtonActionPerformed
        // TODO add your handling code here:
   //Instanciando la lista de usuarios woop woop
        ArrayList<Usuario> users = crear_cuenta.listaUsuarios;

        usuarioLogin = UsuarioTextbox.getText();
        String contraseñaLogin = PasswordTextbox.getText();

        //Por si uhhmmhmh esta vacia que no haga error :sob:
        
        posicion = -1;

        //Verificacion....
        
        System.out.println(listaUsuarios);

        //Revisa todooooo la lista de usuarios para ver si lo puesto existe ahi adentro.
        for (int indice = 0; indice < listaUsuarios.size(); indice++) {
            
            //Verificacion...
            System.out.println(listaUsuarios.get(indice).getnombre());
            
            //si encuentra uno guarda el indice para revisar contraseña despues.
            if(listaUsuarios.get(indice).getnombre().equals(UsuarioTextbox.getText())){

                posicion=indice;

            }

        }

        //Mas verificacion....
        System.out.println(posicion);

        //Validacion de existencia de usuario
        if (posicion != -1) {

            //Revisando si en la posicion encontrada anteriormente se encuentra la contraseña
            if (listaUsuarios.get(posicion).getcontra().equals(PasswordTextbox.getText())) {

                System.out.println("Se encontro el usuario y la contreseña.");
                JOptionPane.showMessageDialog(null, "Inicializo Correctamente");
                Menu pasar = new Menu(users, UsuarioTextbox.getText());
                pasar.setVisible(true);
                this.setVisible(false);
            }  else {

                JOptionPane.showMessageDialog(null, "Contraseña Incorrecta.");
            }

        } else if (usuarioLogin.isEmpty() || contraseñaLogin.isEmpty()) {

            JOptionPane.showMessageDialog(null, "Por favor, llenar todos los campos.");
            System.out.println("Error Campos Vacios.");

        } else {
            System.out.println("No se encontro el usuario o la contraseña.");
            JOptionPane.showMessageDialog(null, "Usuario y/o contraseña equivocada.");
        }

    
    }//GEN-LAST:event_IngresarButtonActionPerformed

    private void UsuarioTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuarioTextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsuarioTextboxActionPerformed

    private void PasswordTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordTextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordTextboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton CancelarButton;
    private javax.swing.JButton IngresarButton;
    private javax.swing.JPasswordField PasswordTextbox;
    private javax.swing.JTextField UsuarioTextbox;
    // End of variables declaration//GEN-END:variables

    static class recibe {

        static void setText(String info) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        public recibe() {
        }
    }
}
